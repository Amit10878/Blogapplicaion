
--------------------------------------------------------------------
<div class="text-center pt-1 mb-5 pb-1">
                                             <a href="unlock" class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button">Sign Up</a>
                                          </div>
---------------------------------------------------------------
<div class="text-center pt-1 mb-5 pb-1">
<input type="submit" value="Sign Up" class="btn btn-outline-danger">
</div>
--------------------------------------------------------
/<p th:text="${succMsg}" class="text-danger">	
--------------------------------------------------
<div class="text-center pt-1 mb-5 pb-1">
											<input type="submit" value="Unlock"
												class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3"
												/>
										</div>
---------------------------------------------------
package com.example.binding;

public class EnquirySearchCriteria {

	public void setCourseName(String cname) {
		// TODO Auto-generated method stub
		
	}

	public void setClassMode(String mode) {
		// TODO Auto-generated method stub
		
	}

	public void setEnqStatus(String status) {
		// TODO Auto-generated method stub
		
	}

	public Object getCourseName() {
		// TODO Auto-generated method stub
		return null;
	}

	public Object getEnqStatus() {
		// TODO Auto-generated method stub
		return null;
	}

	public Object getClassMode() {
		// TODO Auto-generated method stub
		return null;
	}

	

}
---------------------------------------------------
private  String CourseName;
	
	private  String ClassMode;
	
	private  String EnqStatus;

	public String getCourseName() {
		return CourseName;
	}

	public void setCourseName(String courseName) {
		CourseName = courseName;
	}

	public String getClassMode() {
		return ClassMode;
	}

	public void setClassMode(String classMode) {
		ClassMode = classMode;
	}

	public String getEnqStatus() {
		return EnqStatus;
	}

	public void setEnqStatus(String enqStatus) {
		EnqStatus = enqStatus;
	}
----------------------------------------------------------------------
serviceimpl:
--------------
 @Override	
	public List<StudentEnqEntity> getEnquiries(){
		Integer userId = (Integer) session.getAttribute("userId");
		Optional<UserDtlsEntity> findById = userDtlsRepo.findById(userId);
		if(findById.isPresent()) {
			
			UserDtlsEntity userDtlsEntity = findById.get();
			List<StudentEnqEntity> enquiries = userDtlsEntity.getEnquiries();
			return enquiries;
		} 
		return null;
    }

	@Override
	public List<StudentEnqEntity> getFilteredEnqs(EnquirySearchCriteria criteria, Integer userId) {
		Optional<UserDtlsEntity> findById = userDtlsRepo.findById(userId);
		if(findById.isPresent()) {
			UserDtlsEntity userDtlsEntity = findById.get();
			List<StudentEnqEntity> enquiries = userDtlsEntity.getEnquiries();
			
			
			//filter logic
			if(null!=criteria.getCourseName() 
					& !"".equals(criteria.getCourseName())) {
				
				enquiries = enquiries.stream()
			             .filter(e -> e.getCourseName() .equals(criteria.getCourseName())) 
				         .collect(Collectors.toList());
			    }
			    if(null!=criteria.getEnqStatus() && !"".equals(criteria.getEnqStatus())) {
			    	enquiries = enquiries.stream()
			    	.filter(e -> e.getEnqStatus().equals(criteria.getEnqStatus()))
			    	.collect(Collectors.toList());
			    }
			    
			    if(null!=criteria.getClassMode() && !"".equals(criteria.getClassMode())) {
			    	enquiries = enquiries.stream()
			    	.filter(e -> e.getClassMode().equals(criteria.getClassMode()))
			    	.collect(Collectors.toList());
			    }
			    	
			
			
			return enquiries;
		} 
		return null;
	}
------------------------------------
Enquirycontroller:
-----------------
@GetMapping("/enquires")
	public String viewEnquiriesPage(Model model) {
		initForm(model);
	    List<StudentEnqEntity> enquiries = enqService.getEnquiries();
		model.addAttribute("enquiries", enquiries);
		return "view-enquiries";
	}
	
	@GetMapping("/filter-enquiries")
	public String getFilteredEnqs(@RequestParam String cname, 
					@RequestParam String status,
					@RequestParam String mode, 
					Model model){
				
		EnquirySearchCriteria criteria = new EnquirySearchCriteria();
		criteria.setCourseName(cname);
		criteria.setClassMode(mode);
		criteria.setEnqStatus(status);
		
		Integer userId = (Integer) session.getAttribute("userId");
		
		List<StudentEnqEntity> filteredEnqs = 
				enqService.getFilteredEnqs(criteria, userId);
		
		model.addAttribute("enquiries", filteredEnqs);
		
		return "filter-enquiries-page";
	}
--------------------------------------------
EquirySearchcriteria:
----------------------------

    private  String CourseName;
	
	private  String ClassMode;
	
	private  String EnqStatus;

	public String getCourseName() {
		return CourseName;
	}

	public void setCourseName(String courseName) {
		CourseName = courseName;
	}

	public String getClassMode() {
		return ClassMode;
	}

	public void setClassMode(String classMode) {
		ClassMode = classMode;
	}

	public String getEnqStatus() {
		return EnqStatus;
	}

	public void setEnqStatus(String enqStatus) {
		EnqStatus = enqStatus;
	}
	
-------------------------
Equiryservice.java:
-----------------------
public List<StudentEnqEntity> getEnquiries();
	
public List<StudentEnqEntity> getFilteredEnqs(EnquirySearchCriteria criteria, Integer userId);
-------------------------------------------------------	
Filter-equiries-page
--------------------
<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8" />
<meta name="viewport"
	content="width=device-width, initial-scale=1, shrink-to-fit=no" />
<meta http-equiv="x-ua-compatible" content="ie=edge" />
<title>Ashok IT - View Enquries</title>
<link rel="stylesheet"
	href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" />
<!-- Google Fonts Roboto -->
<link rel="stylesheet"
	href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" />
<!-- MDB -->
<link rel="stylesheet" href="css/bootstrap-login-form.min.css" />
<script src="/webjars/jquery/3.6.4/jquery.min.js"></script>
</head>
<body>
							<table class="table table-striped table-bordered table-hover" 
							id="enqTbl">
										<thead>
											<tr>
												<th scope="col">#</th>
												<th scope="col">Name</th>
												<th scope="col">Course</th>
												<th scope="col">Number</th>
												<th scope="col">Enquiry Date</th>
												<th scope="col">Status</th>
												<th scope="col">Mode</th>
												<th scope="col">Action</th>
											</tr>
										</thead>
										<tbody id="table-body">
											<tr th:each="enq : ${enquiries}">
												<td th:text="${enqStat.index} +  1  "></td>
												<td th:text="${enq.studentName}"></td>
												<td th:text="${enq.courseName}"></td>
												<td th:text="${enq.studentPhno}"></td>
												<td th:text="${enq.dateCreated}"></td>
												<td th:text="${enq.enqStatus}"></td>
												<td th:text="${enq.classMode}"></td>
												<td><a th:href="@{/edit}">Edit</a></td>
											</tr>
										</tbody>
									</table>
											
												
												
													
													
													
							
	
</body>

</html>
-----------------------
view-enquiries.html:
----------------------
<script>
   $(document).ready(function() {
	 $(".form-select").on("change", function(e) {
		 $.ajax({
			type: "GET",
			url: "filter-enquiries",
			data : {
				cname : $("#cname").val(),
                mode : $("#mode").val(),
	            status : $("#status").val()
			},
			success : function(result) {
				$("#enqTbl").hide();
				$("#filterResultTbl").html(result);
				
			}
		});
	
	 });
});
	    
</script>
------------------
@GetMapping("/Allpost")
	public String getAllPost(Model model) {
		return "Allpost";
---------------------------------
 <td>Post Title : <p th:text="${dashboardData.posttitleCnt}"/></td>
 <td>Post Short Description : <p th:text="${dashboardData.postshortdescriptionCnt}"/></td>
<td>Post Created On : <p th:text="${dashboardData.postcreatedonCnt}"/></td>			